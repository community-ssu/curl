From eb681b986b457917dbda55c97f03e79a1092ca6d Mon Sep 17 00:00:00 2001
From: Daniel Stenberg <daniel@haxx.se>
Date: Fri, 19 Jan 2018 13:19:25 +0100
Subject: [PATCH] http: prevent custom Authorization headers in redirects

... unless CURLOPT_UNRESTRICTED_AUTH is set to allow them. This matches how
curl already handles Authorization headers created internally.

Added test 317 and 318 to verify behavior.

Reported-by: Craig de Stigter
---
 docs/libcurl/opts/CURLOPT_HTTPHEADER.3 | 12 ++++-
 lib/http.c                             | 10 +++-
 lib/setopt.c                           |  2 +-
 lib/urldata.h                          |  2 +-
 tests/data/Makefile.inc                |  2 +-
 tests/data/test317                     | 94 +++++++++++++++++++++++++++++++++
 tests/data/test318                     | 95 ++++++++++++++++++++++++++++++++++
 7 files changed, 212 insertions(+), 5 deletions(-)
 create mode 100644 tests/data/test317
 create mode 100644 tests/data/test318

Index: curl-7.26.0/lib/http.c
===================================================================
--- curl-7.26.0.orig/lib/http.c	2018-01-29 12:36:18.244239177 +0100
+++ curl-7.26.0/lib/http.c	2018-01-29 13:06:07.220241823 +0100
@@ -671,7 +671,7 @@
   if(!data->state.this_is_a_follow ||
      conn->bits.netrc ||
      !data->state.first_host ||
-     data->set.http_disable_hostname_check_before_authentication ||
+     data->set.allow_auth_to_other_hosts ||
      Curl_raw_equal(data->state.first_host, conn->host.name)) {
     result = output_auth_headers(conn, authhost, request, path, FALSE);
   }
@@ -1566,6 +1566,14 @@
                    Connection: */
                 checkprefix("Connection", headers->data))
           ;
+        else if(checkprefix("Authorization:", headers->data) &&
+                /* be careful of sending this potentially sensitive header to
+                   other hosts */
+                (conn->data->state.this_is_a_follow &&
+                 conn->data->state.first_host &&
+                 !conn->data->set.allow_auth_to_other_hosts &&
+                 !Curl_raw_equal(conn->data->state.first_host, conn->host.name)))
+          ;
         else {
           CURLcode result = Curl_add_bufferf(req_buffer, "%s\r\n",
                                              headers->data);
Index: curl-7.26.0/lib/urldata.h
===================================================================
--- curl-7.26.0.orig/lib/urldata.h	2018-01-29 12:36:18.244239177 +0100
+++ curl-7.26.0/lib/urldata.h	2018-01-29 12:36:18.240239177 +0100
@@ -1494,7 +1494,7 @@
   bool http_fail_on_error;  /* fail on HTTP error codes >= 300 */
   bool http_follow_location; /* follow HTTP redirects */
   bool http_transfer_encoding; /* request compressed HTTP transfer-encoding */
-  bool http_disable_hostname_check_before_authentication;
+  bool allow_auth_to_other_hosts;
   bool include_header;   /* include received protocol headers in data output */
   bool http_set_referer; /* is a custom referer used */
   bool http_auto_referer; /* set "correct" referer when following location: */
Index: curl-7.26.0/tests/data/test317
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ curl-7.26.0/tests/data/test317	2018-01-29 12:36:18.240239177 +0100
@@ -0,0 +1,95 @@
+<testcase>
+<info>
+<keywords>
+HTTP
+HTTP proxy
+HTTP Basic auth
+HTTP proxy Basic auth
+followlocation
+</keywords>
+</info>
+#
+# Server-side
+<reply>
+<data>
+HTTP/1.1 302 OK
+Date: Thu, 09 Nov 2010 14:49:00 GMT
+Server: test-server/fake swsclose
+Content-Type: text/html
+Funny-head: yesyes
+Location: http://goto.second.host.now/3170002
+Content-Length: 8
+Connection: close
+
+contents
+</data>
+<data2>
+HTTP/1.1 200 OK
+Date: Thu, 09 Nov 2010 14:49:00 GMT
+Server: test-server/fake swsclose
+Content-Type: text/html
+Funny-head: yesyes
+Content-Length: 9
+
+contents
+</data2>
+
+<datacheck>
+HTTP/1.1 302 OK
+Date: Thu, 09 Nov 2010 14:49:00 GMT
+Server: test-server/fake swsclose
+Content-Type: text/html
+Funny-head: yesyes
+Location: http://goto.second.host.now/3170002
+Content-Length: 8
+Connection: close
+
+HTTP/1.1 200 OK
+Date: Thu, 09 Nov 2010 14:49:00 GMT
+Server: test-server/fake swsclose
+Content-Type: text/html
+Funny-head: yesyes
+Content-Length: 9
+
+contents
+</datacheck>
+</reply>
+
+#
+# Client-side
+<client>
+<server>
+http
+</server>
+ <name>
+HTTP with custom Authorization: and redirect to new host
+ </name>
+ <command>
+http://first.host.it.is/we/want/that/page/317 -x %HOSTIP:%HTTPPORT -H "Authorization: s3cr3t" --proxy-user testing:this --location
+</command>
+</client>
+
+#
+# Verify data after the test has been "shot"
+<verify>
+<strip>
+^User-Agent:.*
+</strip>
+<protocol>
+GET http://first.host.it.is/we/want/that/page/317 HTTP/1.1
+Proxy-Authorization: Basic dGVzdGluZzp0aGlz
+Host: first.host.it.is
+Accept: */*
+Proxy-Connection: Keep-Alive
+Authorization: s3cr3t
+
+GET http://goto.second.host.now/3170002 HTTP/1.1
+Proxy-Authorization: Basic dGVzdGluZzp0aGlz
+Host: goto.second.host.now
+Accept: */*
+Proxy-Connection: Keep-Alive
+
+</protocol>
+</verify>
+</testcase>
+
Index: curl-7.26.0/tests/data/test318
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ curl-7.26.0/tests/data/test318	2018-01-29 12:36:18.240239177 +0100
@@ -0,0 +1,95 @@
+<testcase>
+<info>
+<keywords>
+HTTP
+HTTP proxy
+HTTP Basic auth
+HTTP proxy Basic auth
+followlocation
+</keywords>
+</info>
+#
+# Server-side
+<reply>
+<data>
+HTTP/1.1 302 OK
+Date: Thu, 09 Nov 2010 14:49:00 GMT
+Server: test-server/fake swsclose
+Content-Type: text/html
+Funny-head: yesyes
+Location: http://goto.second.host.now/3180002
+Content-Length: 8
+Connection: close
+
+contents
+</data>
+<data2>
+HTTP/1.1 200 OK
+Date: Thu, 09 Nov 2010 14:49:00 GMT
+Server: test-server/fake swsclose
+Content-Type: text/html
+Funny-head: yesyes
+Content-Length: 9
+
+contents
+</data2>
+
+<datacheck>
+HTTP/1.1 302 OK
+Date: Thu, 09 Nov 2010 14:49:00 GMT
+Server: test-server/fake swsclose
+Content-Type: text/html
+Funny-head: yesyes
+Location: http://goto.second.host.now/3180002
+Content-Length: 8
+Connection: close
+
+HTTP/1.1 200 OK
+Date: Thu, 09 Nov 2010 14:49:00 GMT
+Server: test-server/fake swsclose
+Content-Type: text/html
+Funny-head: yesyes
+Content-Length: 9
+
+contents
+</datacheck>
+</reply>
+
+#
+# Client-side
+<client>
+<server>
+http
+</server>
+ <name>
+HTTP with custom Authorization: and redirect to new host
+ </name>
+ <command>
+http://first.host.it.is/we/want/that/page/318 -x %HOSTIP:%HTTPPORT -H "Authorization: s3cr3t" --proxy-user testing:this --location-trusted
+</command>
+</client>
+
+#
+# Verify data after the test has been "shot"
+<verify>
+<strip>
+^User-Agent:.*
+</strip>
+<protocol>
+GET http://first.host.it.is/we/want/that/page/318 HTTP/1.1
+Proxy-Authorization: Basic dGVzdGluZzp0aGlz
+Host: first.host.it.is
+Accept: */*
+Proxy-Connection: Keep-Alive
+Authorization: s3cr3t
+
+GET http://goto.second.host.now/3180002 HTTP/1.1
+Proxy-Authorization: Basic dGVzdGluZzp0aGlz
+Host: goto.second.host.now
+Accept: */*
+Proxy-Connection: Keep-Alive
+Authorization: s3cr3t
+
+</protocol>
+</verify>
+</testcase>
Index: curl-7.26.0/lib/url.c
===================================================================
--- curl-7.26.0.orig/lib/url.c	2018-01-29 12:36:18.244239177 +0100
+++ curl-7.26.0/lib/url.c	2018-01-29 12:36:18.240239177 +0100
@@ -1105,7 +1105,7 @@
      * Send authentication (user+password) when following locations, even when
      * hostname changed.
      */
-    data->set.http_disable_hostname_check_before_authentication =
+    data->set.allow_auth_to_other_hosts =
       (0 != va_arg(param, long))?TRUE:FALSE;
     break;
 
Index: curl-7.26.0/tests/data/Makefile.am
===================================================================
--- curl-7.26.0.orig/tests/data/Makefile.am	2018-01-29 12:36:18.244239177 +0100
+++ curl-7.26.0/tests/data/Makefile.am	2018-01-29 12:38:58.244239414 +0100
@@ -36,7 +36,9 @@
 test285 test286 test287 test288 test289 test290 test291 test292 test293	\
 test294 test295 test296 test297 test298 test299 test300 test301 test302	\
 test303 test304 test305 test306 test307 test308 test309 test310 test311	\
-test312 test313 test320 test321 test322 test323 test324 test350 test351	\
+test312 test313 \
+test317 test318 \
+test320 test321 test322 test323 test324 test350 test351	\
 test352 test353 test354 test400 test401 test402 test403 test404 test405	\
 test406 test407 test408 test409 test500 test501 test502 test503 test504	\
 test505 test506 test507 test508 test510 test511 test512 test513 test514	\
