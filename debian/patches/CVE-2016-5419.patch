From: Markus Koschany <apo@debian.org>
Date: Thu, 4 Aug 2016 11:32:30 +0200
Subject: CVE-2016-5419

Fix TLS session resumption client cert bypass.

Origin: https://curl.haxx.se/CVE-2016-5419.patch
---
 lib/sslgen.c  | 10 ++++++++++
 lib/url.c     |  1 +
 lib/urldata.h |  1 +
 3 files changed, 12 insertions(+)

diff --git a/lib/sslgen.c b/lib/sslgen.c
index a77fd78..6f19793 100644
--- a/lib/sslgen.c
+++ b/lib/sslgen.c
@@ -147,6 +147,15 @@ Curl_clone_ssl_config(struct ssl_config_data *source,
   else
     dest->random_file = NULL;
 
+  if(source->clientcert) {
+    dest->clientcert = strdup(source->clientcert);
+    if(!dest->clientcert)
+      return FALSE;
+    dest->sessionid = FALSE;
+  }
+  else
+    dest->clientcert = NULL;
+
   return TRUE;
 }
 
@@ -157,6 +166,7 @@ void Curl_free_ssl_config(struct ssl_config_data* sslc)
   Curl_safefree(sslc->cipher_list);
   Curl_safefree(sslc->egdsocket);
   Curl_safefree(sslc->random_file);
+  Curl_safefree(sslc->clientcert);
 }
 
 #ifdef USE_SSL
diff --git a/lib/url.c b/lib/url.c
index 26ca765..90a4442 100644
--- a/lib/url.c
+++ b/lib/url.c
@@ -5121,6 +5121,7 @@ static CURLcode create_conn(struct SessionHandle *data,
   data->set.ssl.random_file = data->set.str[STRING_SSL_RANDOM_FILE];
   data->set.ssl.egdsocket = data->set.str[STRING_SSL_EGDSOCKET];
   data->set.ssl.cipher_list = data->set.str[STRING_SSL_CIPHER_LIST];
+  data->set.ssl.clientcert = data->set.str[STRING_CERT];
 #ifdef USE_TLS_SRP
   data->set.ssl.username = data->set.str[STRING_TLSAUTH_USERNAME];
   data->set.ssl.password = data->set.str[STRING_TLSAUTH_PASSWORD];
diff --git a/lib/urldata.h b/lib/urldata.h
index 13a03ae..74f5b57 100644
--- a/lib/urldata.h
+++ b/lib/urldata.h
@@ -295,6 +295,7 @@ struct ssl_config_data {
   char *CAfile;          /* certificate to verify peer against */
   const char *CRLfile;   /* CRL to check certificate revocation */
   const char *issuercert;/* optional issuer certificate filename */
+  char *clientcert;
   char *random_file;     /* path to file containing "random" data */
   char *egdsocket;       /* path to file containing the EGD daemon socket */
   char *cipher_list;     /* list of ciphers to use */
